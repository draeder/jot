@import "tailwindcss";

/* WORKING SYNTAX HIGHLIGHTING - DIRECT CSS */
.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  color: #24292e;
  background: #ffffff;
}

.hljs-comment,
.hljs-quote {
  color: #6a737d;
  font-style: italic;
}

.hljs-keyword,
.hljs-selector-tag,
.hljs-built_in,
.hljs-name,
.hljs-tag {
  color: #d73a49;
  font-weight: bold;
}

.hljs-string,
.hljs-doctag {
  color: #032f62;
}

.hljs-title,
.hljs-section,
.hljs-selector-id {
  color: #6f42c1;
  font-weight: bold;
}

.hljs-subst {
  color: #24292e;
}

.hljs-type,
.hljs-class .hljs-title {
  color: #005cc5;
  font-weight: bold;
}

.hljs-number,
.hljs-literal,
.hljs-variable,
.hljs-template-variable,
.hljs-attribute {
  color: #005cc5;
}

.hljs-symbol,
.hljs-bullet,
.hljs-link {
  color: #005cc5;
}

.hljs-meta,
.hljs-selector-attr,
.hljs-selector-pseudo {
  color: #6f42c1;
}

.hljs-regexp {
  color: #032f62;
}

.hljs-addition {
  color: #22863a;
  background-color: #f0fff4;
}

.hljs-deletion {
  color: #b31d28;
  background-color: #ffeef0;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}

/* Rich Text Editor Styles */
.ProseMirror {
  outline: none !important;
  line-height: 1.6;
  padding: 12px !important;
  margin: 0;
  font-size: 14px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  caret-color: #000000 !important;
  cursor: text;
  color: #000000 !important;
  min-height: 100px !important;
  height: 100% !important;
  overflow-y: auto !important;
}

/* Ensure proper editor content styling */
.editor-content {
  height: 100% !important;
  overflow-y: auto !important;
}

.ProseMirror:focus {
  outline: none !important;
  box-shadow: none !important;
}

.ProseMirror.has-focus {
  outline: none !important;
}

.ProseMirror-focused {
  outline: none !important;
}

/* Regular text elements - ALL BLACK */
.ProseMirror p {
  color: #000000 !important;
  margin: 0.75em 0 !important;
  line-height: 1.5 !important;
}

/* Specific paragraph spacing class */
.ProseMirror .paragraph-spacing {
  margin: 0.75em 0 !important;
  line-height: 1.5 !important;
}

/* Ensure paragraph spacing is preserved in card content display */
.prose p,
.card-content p {
  margin: 0.75em 0 !important;
  line-height: 1.5 !important;
}

/* Ensure hard breaks are visible */
.prose .hard-break,
.card-content .hard-break {
  display: block;
  margin: 0.25em 0;
}

/* Fix prose paragraph spacing specifically for card content */
.card-content .paragraph-spacing {
  margin-bottom: 0.75em !important;
  line-height: 1.5 !important;
}

.card-content p:last-child,
.card-content .paragraph-spacing:last-child {
  margin-bottom: 0 !important;
}

/* Ensure empty paragraphs have minimum height */
.ProseMirror p:empty,
.card-content p:empty,
.prose p:empty {
  min-height: 1.2em;
}

/* Code styling */
.ProseMirror code {
  background-color: #f6f8fa !important;
  border: 1px solid #e1e4e8 !important;
  border-radius: 4px !important;
  padding: 2px 4px !important;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;
  font-size: 0.9em !important;
  color: #e36209 !important;
}

/* Code block styling */
.ProseMirror .code-block {
  background-color: #f6f8fa !important;
  border: 1px solid #e1e4e8 !important;
  border-radius: 6px !important;
  padding: 16px !important;
  margin: 8px 0 !important;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;
  font-size: 14px !important;
  line-height: 1.4 !important;
  overflow-x: auto !important;
  position: relative !important;
}

.ProseMirror .code-block pre {
  margin: 0 !important;
  padding: 0 !important;
  background: transparent !important;
  border: none !important;
  font-family: inherit !important;
  font-size: inherit !important;
  line-height: inherit !important;
}

.ProseMirror .code-block code {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  font-family: inherit !important;
  font-size: inherit !important;
}

/* Image styling in editor */
.ProseMirror .editor-image {
  max-width: 100% !important;
  height: auto !important;
  border-radius: 6px !important;
  margin: 8px 0 !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  cursor: pointer !important;
  min-width: 100px !important;
  min-height: 100px !important;
}

/* Image selected state with resize handles */
.ProseMirror .editor-image.ProseMirror-selectednode {
  outline: 2px solid #3b82f6 !important;
  outline-offset: 2px !important;
  position: relative !important;
}

/* Add resize handle styling for images */
.ProseMirror .editor-image:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;
}

/* Display mode code styling */
.card-content code {
  background-color: #f6f8fa !important;
  border: 1px solid #e1e4e8 !important;
  border-radius: 4px !important;
  padding: 2px 4px !important;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;
  font-size: 0.9em !important;
  color: #e36209 !important;
}

/* Image styling in display mode */
.card-content .editor-image,
.card-content img {
  max-width: 100% !important;
  height: auto !important;
  border-radius: 6px !important;
  margin: 8px 0 !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  cursor: pointer !important;
}

.prose .editor-image,
.prose img {
  max-width: 100% !important;
  height: auto !important;
  border-radius: 6px !important;
  margin: 8px 0 !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
}

.card-content .code-block {
  background-color: #f6f8fa !important;
  border: 1px solid #e1e4e8 !important;
  border-radius: 6px !important;
  padding: 16px !important;
  margin: 8px 0 !important;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;
  font-size: 14px !important;
  line-height: 1.4 !important;
  overflow-x: auto !important;
}

.card-content .code-block pre {
  margin: 0 !important;
  padding: 0 !important;
  background: transparent !important;
  border: none !important;
  font-family: inherit !important;
  font-size: inherit !important;
  line-height: inherit !important;
}

.card-content .code-block code {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  font-family: inherit !important;
  font-size: inherit !important;
}

.ProseMirror h1,
.ProseMirror h2, 
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6 {
  color: #000000 !important;
  font-weight: bold;
}

.ProseMirror strong {
  color: #000000 !important;
  font-weight: bold;
}

.ProseMirror em {
  color: #000000 !important;
  font-style: italic;
}

/* Inline code styling - BLACK TEXT */
.ProseMirror code {
  background: #f3f4f6 !important;
  color: #000000 !important;
  padding: 2px 4px !important;
  border-radius: 3px !important;
  font-family: 'SF Mono', Monaco, 'Inconsolata', 'Roboto Mono', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace !important;
  font-size: 0.875em !important;
}

/* Rich Text Editor Toolbar Styling */
.rich-text-editor .ProseMirror {
  background-color: #ffffff !important;
  color: #000000 !important;
  outline: none !important;
}

.rich-text-editor .ProseMirror:focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Toolbar button styling - PROPER STROKE ICONS */
.rich-text-editor button {
  color: #000000 !important;
}

.rich-text-editor button svg {
  stroke: #000000 !important;
  fill: none !important;
  stroke-width: 2 !important;
}

.rich-text-editor button:disabled svg {
  stroke: #9ca3af !important;
  fill: none !important;
}

.rich-text-editor button span {
  color: #000000 !important;
}

/* Lists styling */
.ProseMirror ul {
  list-style-type: disc !important;
  padding-left: 1.5em !important;
  margin: 0.5em 0 !important;
}

.ProseMirror ol {
  list-style-type: decimal !important;
  padding-left: 1.5em !important;
  margin: 0.5em 0 !important;
}

.ProseMirror li {
  color: #000000 !important;
  margin: 0.2em 0 !important;
}

/* Blockquote styling */
.ProseMirror blockquote {
  border-left: 4px solid #e5e7eb !important;
  padding-left: 1em !important;
  margin: 1em 0 !important;
  font-style: italic !important;
  color: #000000 !important;
}

.ProseMirror blockquote p {
  color: #000000 !important;
  margin: 0 !important;
}

/* Card content display - BLACK TEXT ON WHITE */
.prose {
  color: #000000 !important;
  background-color: #ffffff !important;
}

.prose p {
  color: #000000 !important;
}

.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 {
  color: #000000 !important;
}

.prose strong {
  color: #000000 !important;
}

.prose em {
  color: #000000 !important;
}

.prose ul,
.prose ol {
  color: #000000 !important;
}

.prose ul {
  list-style-type: disc !important;
  padding-left: 1.5em !important;
  margin: 0.5em 0 !important;
}

.prose ol {
  list-style-type: decimal !important;
  padding-left: 1.5em !important;
  margin: 0.5em 0 !important;
}

.prose li {
  color: #000000 !important;
  margin: 0.2em 0 !important;
  display: list-item !important;
}

.prose blockquote {
  color: #000000 !important;
  border-left: 4px solid #e5e7eb !important;
  padding-left: 1em !important;
  margin: 1em 0 !important;
  font-style: italic !important;
}

.prose a {
  color: #000000 !important;
}

.prose code {
  color: #000000 !important;
  background-color: #f3f4f6 !important;
}

/* CRITICAL: Apply EXACT same highlight.js styles to card display as in edit mode */
.card-content .hljs-keyword,
.card-content .hljs-selector-tag,
.card-content .hljs-built_in,
.card-content .hljs-name,
.card-content .hljs-tag {
  color: #d73a49 !important;
  font-weight: bold !important;
}

.card-content .hljs-string,
.card-content .hljs-doctag {
  color: #032f62 !important;
}

.card-content .hljs-comment,
.card-content .hljs-quote {
  color: #6a737d !important;
  font-style: italic !important;
}

.card-content .hljs-number,
.card-content .hljs-literal,
.card-content .hljs-variable,
.card-content .hljs-template-variable,
.card-content .hljs-attribute {
  color: #005cc5 !important;
}

.card-content .hljs-title,
.card-content .hljs-section,
.card-content .hljs-selector-id,
.card-content .hljs-type,
.card-content .hljs-class .hljs-title {
  color: #6f42c1 !important;
  font-weight: bold !important;
}

.card-content .hljs-meta,
.card-content .hljs-selector-attr,
.card-content .hljs-selector-pseudo {
  color: #6f42c1 !important;
}

.card-content .hljs-symbol,
.card-content .hljs-bullet,
.card-content .hljs-link {
  color: #005cc5 !important;
}

.card-content .hljs-regexp {
  color: #032f62 !important;
}

.card-content .hljs-addition {
  color: #22863a !important;
  background-color: #f0fff4 !important;
}

.card-content .hljs-deletion {
  color: #b31d28 !important;
  background-color: #ffeef0 !important;
}

.card-content .hljs-emphasis {
  font-style: italic !important;
}

.card-content .hljs-strong {
  font-weight: bold !important;
}

.card-content .hljs-function {
  color: #6f42c1 !important;
}

.card-content .hljs-params {
  color: #24292e !important;
}

.card-content .hljs-selector-class {
  color: #6f42c1 !important;
}

.card-content .hljs-subst {
  color: #24292e !important;
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* IMPORTANT: Input field styles - ensure text is black */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
textarea {
  color: #000000 !important;
}

/* Rich text editor should have black text */
.ProseMirror {
  color: #000000 !important;
}

/* Placeholder text should remain gray */
input::placeholder,
textarea::placeholder {
  color: #9ca3af !important;
}

/* Dark mode overrides - FORCE BLACK TEXT ON WHITE BACKGROUND */
@media (prefers-color-scheme: dark) {
  input[type="text"],
  input[type="email"], 
  input[type="password"],
  input[type="search"],
  textarea {
    color: #000000 !important;
    background-color: #ffffff !important;
  }
  
  .ProseMirror {
    color: #000000 !important;
    background-color: #ffffff !important;
  }
  
  .prose {
    color: #000000 !important;
    background-color: #ffffff !important;
  }
  
  .prose p,
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6,
  .prose strong,
  .prose em,
  .prose ul,
  .prose ol,
  .prose li,
  .prose blockquote,
  .prose a {
    color: #000000 !important;
  }
  
  .prose ul {
    list-style-type: disc !important;
    padding-left: 1.5em !important;
    margin: 0.5em 0 !important;
  }
  
  .prose ol {
    list-style-type: decimal !important;
    padding-left: 1.5em !important;
    margin: 0.5em 0 !important;
  }
  
  .prose li {
    display: list-item !important;
    margin: 0.2em 0 !important;
  }
  
  .prose code {
    color: #000000 !important;
    background-color: #f3f4f6 !important;
  }
  
  input::placeholder,
  textarea::placeholder {
    color: #9ca3af !important;
  }
}

/* Task List Styles for Checklists */
.task-list {
  list-style: none !important;
  padding-left: 0 !important;
  margin: 0.5em 0 !important;
}

.task-item {
  display: flex !important;
  align-items: center !important;
  margin: 0.2em 0 !important;
  padding: 0 !important;
  list-style: none !important;
  line-height: 1.5 !important;
}

.task-item > label {
  display: flex !important;
  align-items: center !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
  margin-right: 0.5em !important;
  margin-top: 0 !important;
}

.task-item > label > input[type="checkbox"] {
  margin: 0 !important;
  width: 14px !important;
  height: 14px !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
  vertical-align: middle !important;
}

.task-item > div {
  flex: 1 !important;
  min-width: 0 !important;
}

/* Styles for checked items */
.task-item[data-checked="true"] > div {
  text-decoration: line-through !important;
  opacity: 0.6 !important;
}

/* Nested task lists */
.task-item .task-list {
  margin-left: 1.5em !important;
  margin-top: 0.25em !important;
}

/* Ensure proper styling in both edit and view modes */
.prose .task-list,
.editor-content .task-list {
  list-style: none !important;
  padding-left: 0 !important;
}

.prose .task-item,
.editor-content .task-item {
  display: flex !important;
  align-items: center !important;
  list-style: none !important;
  line-height: 1.5 !important;
}

.prose .task-item > label,
.editor-content .task-item > label {
  display: flex !important;
  align-items: center !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
  margin-right: 0.5em !important;
  margin-top: 0 !important;
}

.prose .task-item > label > input[type="checkbox"],
.editor-content .task-item > label > input[type="checkbox"] {
  margin: 0 !important;
  width: 14px !important;
  height: 14px !important;
  cursor: pointer !important;
  vertical-align: middle !important;
}
